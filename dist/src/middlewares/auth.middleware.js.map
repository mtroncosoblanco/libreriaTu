{"version":3,"sources":["../../../src/middlewares/auth.middleware.ts"],"sourcesContent":["import { CustomJwtPayload } from '../utils/CustomJwtPayload'\r\nimport {Response, Request, NextFunction} from 'express'\r\nimport jwt from \"jsonwebtoken\"\r\n\r\nconst TOKEN_PASSWORD = process.env.TOKEN_PASSWORD || 'pass'\r\n//TODO quita el any\r\nexport const isAuthenticate = (req:Request, res:Response, next:NextFunction):any => {\r\n\r\n    //const token = req.headers.authorization?.split(\" \")[1]\r\n    const token = req.cookies.token\r\n    if(!token) return res.status(401).json({error: 'Access denied'})\r\n\r\n    try{\r\n        const tokenDecodificado = jwt.verify(token, TOKEN_PASSWORD)\r\n        req.user = tokenDecodificado as CustomJwtPayload\r\n        next()\r\n    }catch(error){\r\n        res.status(401).json({error:'Invalid token'})\r\n    }\r\n}"],"names":["isAuthenticate","TOKEN_PASSWORD","process","env","req","res","next","token","cookies","status","json","error","tokenDecodificado","jwt","verify","user"],"mappings":";;;;+BAMaA;;;eAAAA;;;qEAJG;;;;;;AAEhB,MAAMC,iBAAiBC,QAAQC,GAAG,CAACF,cAAc,IAAI;AAE9C,MAAMD,iBAAiB,CAACI,KAAaC,KAAcC;IAGtD,MAAMC,QAAQH,IAAII,OAAO,CAACD,KAAK;IAC/B,IAAG,CAACA,OAAO,OAAOF,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;QAACC,OAAO;IAAe;IAE9D,IAAG;QACC,MAAMC,oBAAoBC,qBAAG,CAACC,MAAM,CAACP,OAAON;QAC5CG,IAAIW,IAAI,GAAGH;QACXN;IACJ,EAAC,OAAMK,OAAM;QACTN,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;YAACC,OAAM;QAAe;IAC/C;AACJ"}