{"version":3,"sources":["../../../src/services/offer.service.ts"],"sourcesContent":["import { prisma } from \"../database/database\";\r\nimport { HttpException } from \"../exceptions/httpException\";\r\nimport { Book, PrismaClient, User } from \"@prisma/client\";\r\n//const prisma = new PrismaClient()\r\n\r\nexport class OfferService {\r\n  static async getById(id: number) {\r\n    const findOffer = await prisma.book.findUnique({ where: { id } });\r\n    if (!findOffer) throw new HttpException(404, \"Offer not found\");\r\n    return findOffer;\r\n  }\r\n\r\n  // localhost:3000/api/offer/?title=dam\r\n  static async getAll(title: string = \"\") {\r\n    /*  return await prisma.offer.findMany({\r\n            where: title ? {\r\n                title: {\r\n                    contains: title\r\n                }\r\n            } : {},\r\n            orderBy: {\r\n                createdAt: 'desc'\r\n            },\r\n            take: 100\r\n        }) */\r\n\r\n    return await prisma.book.findMany({\r\n      where: {\r\n        ...(title && {\r\n          title: {\r\n            contains: title,\r\n            //mode: \"insensitive\" // Búsqueda sin distinción entre mayúsculas y minúsculas\r\n          },\r\n        }),\r\n      },\r\n      orderBy: {\r\n        createdAt: \"desc\",\r\n      },\r\n      take: 100,\r\n      include: {\r\n        category: {\r\n          select: {\r\n            name: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  static async create(idUser: number, offer: Book) {\r\n    console.log(\"creando\", idUser);\r\n    return await prisma.book.create({\r\n      data: {\r\n        ...offer,\r\n        idUserCreator: idUser,\r\n      },\r\n    });\r\n  }\r\n\r\n  static async update(id: number, book: Book) {\r\n    const findOffer = await prisma.book.findUnique({ where: { id } });\r\n    if (!findOffer) throw new HttpException(404, \"Offer doesnt exists\");\r\n    return await prisma.book.update({\r\n      where: { id },\r\n      data: {\r\n        ...book,\r\n      },\r\n    });\r\n  }\r\n\r\n  static async delete(id: number) {\r\n    try {\r\n      return await prisma.book.delete({ where: { id } });\r\n    } catch (error) {\r\n      throw new HttpException(404, \"Offer not found\");\r\n    }\r\n  }\r\n\r\n  static async price(\r\n    idUser: number,\r\n    idBook: number,\r\n    value: number\r\n  ): Promise<void> {\r\n    // Validar que el rating está dentro del rango permitido\r\n    if (value < 0 || value > 5) {\r\n      throw new Error(\"Rating must be between 0 and 5.\");\r\n    }\r\n\r\n    // Verificar si la oferta existe\r\n    const book = await prisma.book.findUnique({ where: { id: idBook } });\r\n    if (!book) {\r\n      throw new Error(\"Book not found.\");\r\n    }\r\n\r\n    // Actualizar o crear la calificación\r\n\r\n    /*\r\n        SELECT  AVG(value) AS averageValue, COUNT(value) AS totalCount\r\n    FROM Rating\r\n    WHERE offerId = <offerId>;\r\n        */\r\n    await prisma.price.upsert({\r\n      where: { idUser_idBook: { idUser, idBook } },\r\n      update: { value },\r\n      create: { idUser, idBook, value },\r\n    });\r\n  }\r\n\r\n  static async getRate(idBook: number) {\r\n    const ratingStats = await prisma.price.aggregate({\r\n      where: { idBook },\r\n      _avg: { value: true }, // Calcular el promedio\r\n      _count: { value: true }, // Contar el total de calificaciones\r\n    });\r\n    return {\r\n      totalRatings: ratingStats._count.value || 0,\r\n      averageRating: ratingStats._avg.value?.toFixed(2) || 0,\r\n    };\r\n  }\r\n\r\n  static async getMyRate(idUser: number, idBook: number) {\r\n    return await prisma.price.findUnique({\r\n      where: { idUser_idBook: { idUser, idBook } },\r\n    });\r\n  }\r\n}\r\n"],"names":["OfferService","getById","id","findOffer","prisma","book","findUnique","where","HttpException","getAll","title","findMany","contains","orderBy","createdAt","take","include","category","select","name","create","idUser","offer","console","log","data","idUserCreator","update","delete","error","price","idBook","value","Error","upsert","idUser_idBook","getRate","ratingStats","aggregate","_avg","_count","totalRatings","averageRating","toFixed","getMyRate"],"mappings":"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"}