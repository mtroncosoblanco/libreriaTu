{"version":3,"sources":["../../../src/controllers/offer.controller.ts"],"sourcesContent":["import { HttpException } from \"../exceptions/httpException\";\r\nimport { OfferService } from \"../services/offer.service\";\r\nimport {Response, Request, NextFunction} from 'express'\r\n\r\nexport class OfferController{\r\n    static async getById(req:Request, res:Response, next:NextFunction){\r\n        try{\r\n            const id = Number.parseInt(req.params.id)\r\n            if (isNaN(id)) throw new HttpException(400, \"Invalid offer ID\");\r\n\r\n            // pasar a entero\r\n            const offer = await OfferService.getById(id)\r\n            res.status(200).json(offer)\r\n        }catch(error){\r\n            next(error)\r\n        }\r\n    }\r\n\r\n    static async getAll(req:Request, res:Response, next: NextFunction){\r\n        try{\r\n            //localhost:3000/offer?title=XXXXXX\r\n            const { title } = req.query;\r\n            const user = await OfferService.getAll(title as string)\r\n            res.status(200).json(user)\r\n        }catch(error){\r\n            next(error)\r\n        }\r\n    }\r\n\r\n    static async create(req:Request, res:Response, next: NextFunction){\r\n        try{\r\n            const offerData = req.body\r\n            const userId = req.user?.id\r\n            if (!userId) throw new HttpException(400, \"User creator ID is required\");\r\n\r\n            const newOffer = await OfferService.create(userId, offerData)\r\n            res.status(200).json(newOffer)\r\n        }catch(error){\r\n            next(error)\r\n        }\r\n    }\r\n    static async update(req:Request, res:Response, next: NextFunction){\r\n        try{\r\n            const offerData = req.body\r\n            const id = Number.parseInt(req.params.id)\r\n            if (isNaN(id)) throw new HttpException(400, \"Invalid offer ID\");\r\n\r\n            const updatedOffer = await OfferService.update(id, offerData)\r\n            res.status(200).json(updatedOffer)\r\n        }catch(error){\r\n            next(error)\r\n        }\r\n    }\r\n\r\n    static async delete(req:Request, res:Response, next: NextFunction){\r\n        try{\r\n            const id = Number.parseInt(req.params.id)\r\n            if (isNaN(id)) throw new HttpException(400, \"Invalid offer ID\");\r\n\r\n            const deletedOffer = await OfferService.delete(id)\r\n            res.status(200).json(deletedOffer)\r\n        }catch(error){\r\n            next(error)\r\n        }\r\n    }\r\n    static async rate(req:Request, res:Response, next: NextFunction){\r\n        try{\r\n            const id = Number.parseInt(req.params.id)\r\n            console.log('id!!!', id)\r\n            if (isNaN(id)) throw new HttpException(400, \"Invalid offer ID\");\r\n\r\n            const {value} = req.body\r\n            const userId = req.user?.id\r\n            if(!userId) throw new HttpException(400, \"User creator ID is required\");\r\n            console.log('value!!!', value)\r\n            console.log('userId!!!', userId)\r\n            await OfferService.price(userId, id, value)\r\n            res.status(200).json({message: 'Offer rate successfully'})\r\n        }catch(error){\r\n            next(error)\r\n        }\r\n    }\r\n\r\n    static async getRate(req:Request, res:Response, next: NextFunction){\r\n        try{\r\n            const id = Number.parseInt(req.params.id)\r\n            if (isNaN(id)) throw new HttpException(400, \"Invalid offer ID\");\r\n\r\n            const rate = await OfferService.getRate(id)\r\n            console.log(rate)\r\n            res.status(200).json(rate)\r\n        }catch(error){\r\n            next(error)\r\n        }\r\n    }\r\n    static async getMyPrice(req:Request, res:Response, next: NextFunction){\r\n        try{\r\n            const id = Number.parseInt(req.params.id)\r\n            if (isNaN(id)) throw new HttpException(400, \"Invalid offer ID\");\r\n            \r\n            const userId = req.user?.id\r\n            if(!userId) throw new HttpException(400, \"User creator ID is required\");\r\n\r\n            const price = await OfferService.getMyRate(userId, id)\r\n            res.status(200).json(price)\r\n        }catch(error){\r\n            next(error)\r\n        }\r\n    }\r\n}\r\n"],"names":["OfferController","getById","req","res","next","id","Number","parseInt","params","isNaN","HttpException","offer","OfferService","status","json","error","getAll","title","query","user","create","offerData","body","userId","newOffer","update","updatedOffer","delete","deletedOffer","rate","console","log","value","price","message","getRate","getMyPrice","getMyRate"],"mappings":"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"}