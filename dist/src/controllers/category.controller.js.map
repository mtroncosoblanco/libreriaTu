{"version":3,"sources":["../../../src/controllers/category.controller.ts"],"sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\nimport { CategoryService } from \"../services/category.service\";\r\nimport { HttpException } from \"../exceptions/httpException\";\r\n\r\nexport class CategoryController {\r\n    static async getAll(req: Request, res: Response, next: NextFunction){\r\n        try {\r\n            const categories = await CategoryService.getAll();\r\n            res.status(200).json(categories)\r\n        } catch (error) {\r\n            next(error);\r\n        }\r\n    }\r\n\r\n    static async getById(req: Request, res: Response, next: NextFunction) {\r\n        try {\r\n            const id = parseInt(req.params.id);\r\n            if (isNaN(id)) throw new HttpException(400, \"Invalid category ID\");\r\n\r\n            const category = await CategoryService.getById(id);\r\n            res.status(200).json(category)            \r\n        } catch (error) {\r\n            next(error);\r\n        }\r\n    }\r\n\r\n    static async create(req: Request, res: Response, next: NextFunction) {\r\n        try {\r\n            const category = req.body;\r\n\r\n            if (!category) throw new HttpException(400, \"Category is required\");\r\n\r\n            const newCategory = await CategoryService.create(category);\r\n            res.status(201).json(newCategory);\r\n        } catch (error) {\r\n            next(error);\r\n        }\r\n    }\r\n\r\n    static async update(req: Request, res: Response, next: NextFunction) {\r\n        try {\r\n            const id = parseInt(req.params.id);\r\n            if (isNaN(id)) throw new HttpException(400, \"Invalid category ID\");\r\n\r\n            const category = req.body;\r\n            if (!category) throw new HttpException(400, \"Category is required\");\r\n\r\n            const updatedCategory = await CategoryService.update(id, category);\r\n            res.status(200).json(updatedCategory)\r\n        } catch (error) {\r\n            next(error);\r\n        }\r\n    }\r\n\r\n    static async delete(req: Request, res: Response, next: NextFunction) {\r\n        try {\r\n            const id = parseInt(req.params.id);\r\n            if (isNaN(id)) throw new HttpException(400, \"Invalid category ID\");\r\n\r\n            const deleted = await CategoryService.delete(id);\r\n            res.status(200).json(deleted)\r\n        } catch (error) {\r\n            next(error);\r\n        }\r\n    }\r\n}\r\n"],"names":["CategoryController","getAll","req","res","next","categories","CategoryService","status","json","error","getById","id","parseInt","params","isNaN","HttpException","category","create","body","newCategory","update","updatedCategory","delete","deleted"],"mappings":";;;;+BAIaA;;;eAAAA;;;iCAHmB;+BACF;AAEvB,IAAA,AAAMA,qBAAN,MAAMA;IACT,aAAaC,OAAOC,GAAY,EAAEC,GAAa,EAAEC,IAAkB,EAAC;QAChE,IAAI;YACA,MAAMC,aAAa,MAAMC,gCAAe,CAACL,MAAM;YAC/CE,IAAII,MAAM,CAAC,KAAKC,IAAI,CAACH;QACzB,EAAE,OAAOI,OAAO;YACZL,KAAKK;QACT;IACJ;IAEA,aAAaC,QAAQR,GAAY,EAAEC,GAAa,EAAEC,IAAkB,EAAE;QAClE,IAAI;YACA,MAAMO,KAAKC,SAASV,IAAIW,MAAM,CAACF,EAAE;YACjC,IAAIG,MAAMH,KAAK,MAAM,IAAII,4BAAa,CAAC,KAAK;YAE5C,MAAMC,WAAW,MAAMV,gCAAe,CAACI,OAAO,CAACC;YAC/CR,IAAII,MAAM,CAAC,KAAKC,IAAI,CAACQ;QACzB,EAAE,OAAOP,OAAO;YACZL,KAAKK;QACT;IACJ;IAEA,aAAaQ,OAAOf,GAAY,EAAEC,GAAa,EAAEC,IAAkB,EAAE;QACjE,IAAI;YACA,MAAMY,WAAWd,IAAIgB,IAAI;YAEzB,IAAI,CAACF,UAAU,MAAM,IAAID,4BAAa,CAAC,KAAK;YAE5C,MAAMI,cAAc,MAAMb,gCAAe,CAACW,MAAM,CAACD;YACjDb,IAAII,MAAM,CAAC,KAAKC,IAAI,CAACW;QACzB,EAAE,OAAOV,OAAO;YACZL,KAAKK;QACT;IACJ;IAEA,aAAaW,OAAOlB,GAAY,EAAEC,GAAa,EAAEC,IAAkB,EAAE;QACjE,IAAI;YACA,MAAMO,KAAKC,SAASV,IAAIW,MAAM,CAACF,EAAE;YACjC,IAAIG,MAAMH,KAAK,MAAM,IAAII,4BAAa,CAAC,KAAK;YAE5C,MAAMC,WAAWd,IAAIgB,IAAI;YACzB,IAAI,CAACF,UAAU,MAAM,IAAID,4BAAa,CAAC,KAAK;YAE5C,MAAMM,kBAAkB,MAAMf,gCAAe,CAACc,MAAM,CAACT,IAAIK;YACzDb,IAAII,MAAM,CAAC,KAAKC,IAAI,CAACa;QACzB,EAAE,OAAOZ,OAAO;YACZL,KAAKK;QACT;IACJ;IAEA,aAAaa,OAAOpB,GAAY,EAAEC,GAAa,EAAEC,IAAkB,EAAE;QACjE,IAAI;YACA,MAAMO,KAAKC,SAASV,IAAIW,MAAM,CAACF,EAAE;YACjC,IAAIG,MAAMH,KAAK,MAAM,IAAII,4BAAa,CAAC,KAAK;YAE5C,MAAMQ,UAAU,MAAMjB,gCAAe,CAACgB,MAAM,CAACX;YAC7CR,IAAII,MAAM,CAAC,KAAKC,IAAI,CAACe;QACzB,EAAE,OAAOd,OAAO;YACZL,KAAKK;QACT;IACJ;AACJ"}