{"version":3,"sources":["../../../src/controllers/auth.controller.ts"],"sourcesContent":["import { AuthService } from \"../services/auth.service\";\r\nimport { Response, Request, NextFunction } from 'express'\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nconst TOKEN_PASSWORD = process.env.TOKEN_PASSWORD || 'pass'\r\n\r\nexport class AuthController {\r\n    static async register(req: Request, res: Response, next: NextFunction) {\r\n        try {\r\n            const userData = req.body\r\n            //TODO validar el body\r\n            const newUser = await AuthService.register(userData)\r\n            res.status(201).json({ message: 'User register successfully', newUser })\r\n        } catch (error) {\r\n            next(error)\r\n        }\r\n\r\n    }\r\n\r\n    static async login(req: Request, res: Response, next: NextFunction) {\r\n        try {\r\n            const userData = req.body\r\n            console.log('looo',userData.email, userData.password)\r\n            const { token, user } = await AuthService.login(userData.email, userData.password)\r\n            //TODO inyectar cookie al cliente\r\n            console.log(token, user)\r\n\r\n            const validSameSiteValues = [\"none\", \"lax\", \"strict\"] as const; // Valores permitidos\r\n\r\n            const sameSiteValue: \"none\" | \"lax\" | \"strict\" = validSameSiteValues.includes(process.env.COOKIE_SAME_SITE as \"none\" | \"lax\" | \"strict\")\r\n            ? (process.env.COOKIE_SAME_SITE as \"none\" | \"lax\" | \"strict\")\r\n            : \"none\"; // Si no es v√°lido, usa \"none\" por defecto\r\n\r\n\r\n            res.cookie('token', token, {\r\n                maxAge: 60 * 60 * 1000 * 3, // 3 horas de caducidad\r\n                httpOnly: true, // no se puede accerder mediante js\r\n                secure: process.env.COOKIE_SECURE ? process.env.COOKIE_SECURE === \"true\" : true,// solo se envia si usas https\r\n                sameSite: sameSiteValue, // Evita ataques CSRF\r\n\r\n            })\r\n            res.status(201).json({ message: 'Login successfully:', user })\r\n        } catch (error) {\r\n            next(error)\r\n        }\r\n    }\r\n\r\n    static async logout(req: Request, res: Response, next: NextFunction) {\r\n        try {\r\n            res.clearCookie('token')\r\n            res.status(204).json({ message: 'Logout successfully:' })\r\n        } catch (error) {\r\n            next(error)\r\n        }\r\n    }\r\n\r\n    static async getAuthenticatedUser (req: Request, res: Response, next: NextFunction){\r\n        try {\r\n            const token = req.cookies.token;\r\n            if (!token)  res.status(401).json({ message: \"No autenticado\" });\r\n            const decoded = jwt.verify(token, TOKEN_PASSWORD);\r\n            res.status(200).json(decoded)\r\n        } catch (error) {\r\n            next(error)\r\n        }\r\n    };\r\n}\r\n"],"names":["AuthController","TOKEN_PASSWORD","process","env","register","req","res","next","userData","body","newUser","AuthService","status","json","message","error","login","console","log","email","password","token","user","validSameSiteValues","sameSiteValue","includes","COOKIE_SAME_SITE","cookie","maxAge","httpOnly","secure","COOKIE_SECURE","sameSite","logout","clearCookie","getAuthenticatedUser","cookies","decoded","jwt","verify"],"mappings":";;;;+BAMaA;;;eAAAA;;;6BANe;qEAEZ;;;;;;AAEhB,MAAMC,iBAAiBC,QAAQC,GAAG,CAACF,cAAc,IAAI;AAE9C,IAAA,AAAMD,iBAAN,MAAMA;IACT,aAAaI,SAASC,GAAY,EAAEC,GAAa,EAAEC,IAAkB,EAAE;QACnE,IAAI;YACA,MAAMC,WAAWH,IAAII,IAAI;YAEzB,MAAMC,UAAU,MAAMC,wBAAW,CAACP,QAAQ,CAACI;YAC3CF,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;gBAA8BJ;YAAQ;QAC1E,EAAE,OAAOK,OAAO;YACZR,KAAKQ;QACT;IAEJ;IAEA,aAAaC,MAAMX,GAAY,EAAEC,GAAa,EAAEC,IAAkB,EAAE;QAChE,IAAI;YACA,MAAMC,WAAWH,IAAII,IAAI;YACzBQ,QAAQC,GAAG,CAAC,QAAOV,SAASW,KAAK,EAAEX,SAASY,QAAQ;YACpD,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAE,GAAG,MAAMX,wBAAW,CAACK,KAAK,CAACR,SAASW,KAAK,EAAEX,SAASY,QAAQ;YAEjFH,QAAQC,GAAG,CAACG,OAAOC;YAEnB,MAAMC,sBAAsB;gBAAC;gBAAQ;gBAAO;aAAS;YAErD,MAAMC,gBAA2CD,oBAAoBE,QAAQ,CAACvB,QAAQC,GAAG,CAACuB,gBAAgB,IACvGxB,QAAQC,GAAG,CAACuB,gBAAgB,GAC7B;YAGFpB,IAAIqB,MAAM,CAAC,SAASN,OAAO;gBACvBO,QAAQ,KAAK,KAAK,OAAO;gBACzBC,UAAU;gBACVC,QAAQ5B,QAAQC,GAAG,CAAC4B,aAAa,GAAG7B,QAAQC,GAAG,CAAC4B,aAAa,KAAK,SAAS;gBAC3EC,UAAUR;YAEd;YACAlB,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;gBAAuBQ;YAAK;QAChE,EAAE,OAAOP,OAAO;YACZR,KAAKQ;QACT;IACJ;IAEA,aAAakB,OAAO5B,GAAY,EAAEC,GAAa,EAAEC,IAAkB,EAAE;QACjE,IAAI;YACAD,IAAI4B,WAAW,CAAC;YAChB5B,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAAuB;QAC3D,EAAE,OAAOC,OAAO;YACZR,KAAKQ;QACT;IACJ;IAEA,aAAaoB,qBAAsB9B,GAAY,EAAEC,GAAa,EAAEC,IAAkB,EAAC;QAC/E,IAAI;YACA,MAAMc,QAAQhB,IAAI+B,OAAO,CAACf,KAAK;YAC/B,IAAI,CAACA,OAAQf,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAAiB;YAC9D,MAAMuB,UAAUC,qBAAG,CAACC,MAAM,CAAClB,OAAOpB;YAClCK,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAACwB;QACzB,EAAE,OAAOtB,OAAO;YACZR,KAAKQ;QACT;IACJ;AACJ"}